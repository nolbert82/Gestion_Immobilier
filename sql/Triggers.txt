-------------------------- LOCATAIRE -------------------------------------
-- Déclencheur pour vérifier la date de naissance du locataire
create or replace trigger checkLocataireDateNais before insert or update on Locataire
    for each row
    begin
       if :NEW.DateNaissance >= SYSDATE then
          -- Si la date de naissance est postérieure ou égale à l'actuelle
          raise_application_error(-20001, 'La date de naissance ne peut pas être égale ou ultérieure à la date actuelle.'); end if;
    end;
/

-------------------------- LOUABLE -------------------------------------

-- Déclencheur pour vérifier que la date d'acquisition du bien n'est pas ultérieure à la date actuelle
create or replace trigger checkLouableDateAcqui before insert or update on Louable
    for each row
    begin
       if :NEW.DateAnniversaire > SYSDATE then
          -- Si la la date d'acquisition est postérieure à la date actuelle
          raise_application_error(-20001, 'La date d''acquisition du logement ne peut pas être ultérieure à la date actuelle.'); end if;
    end;
/

---------------------- DIAGNOSTIC ----------------------

-- Déclencheur pour vérifier que la date de validité du diagnostic est ultérieure à la date actuelle
create or replace trigger checkDiagnosticDate before insert or update on Diagnostic
    for each row
    begin
        if :NEW.DateDiagnostic <= SYSDATE then
          -- Si la date de validité est antérieure ou égale à l'actuelle
          raise_application_error(-20001, 'La date de validité doit être ultérieure à la date actuelle.'); end if;
    end;
/

---------------------- QUITTANCES ----------------------

-- Déclencheur pour vérifier que la date de la dernière régularisation n'est pas ultérieure à la date actuelle lors de l'insertion ou de la mise à jour
create or replace trigger checkQuittancesDerPaie before insert on Quittances
    for each row
    begin
       if :NEW.DatePaiement  > SYSDATE then
          -- Si la date de la dernière régularisation est postérieure à l'actuelle
          raise_application_error(-20001, 'La date de la dernière régularisation ne peut pas être ultérieure à la date actuelle.'); end if;
    end;
/

---------------------- CONTRAT DE LOCATION ----------------------

-- Déclencheur pour vérifier que la date de début de location n'est pas ultérieure à l'actuelle
create or replace trigger checkDateDeb before insert or update on Contrat_de_location
    for each row
    begin
       if :NEW.DateDebut > SYSDATE then
          -- Si la date de début de location est ultérieure à l'actuelle
          raise_application_error(-20001, 'La date de début de location ne peut pas être ultérieure à la date actuelle.'); end if;
    end;
/


---------------------- FACTURE ----------------------

-- Déclencheur pour vérifier que la date d'émission de la facture n'est pas ultérieure à l'actuelle
create or replace trigger checkDateFact before insert or update on Facture
    for each row
    begin
       if :NEW.DateFacture > SYSDATE then
          -- Si la date de la facture est postérieure à la date actuelle
          raise_application_error(-20001, 'La date de la facture ne peut pas être ultérieure à la date actuelle.'); end if;
    end;
/

-- Déclencheur pour vérifier que la date de paiement de la facture n'est pas ultérieure à l'actuelle
create or replace trigger checkDatePaie before insert on Facture
    for each row
    begin
       if :NEW.DateFacture > SYSDATE then
        -- Si la date de paiement est ultérieure à l'actuelle
          raise_application_error(-20001, 'La date de paiement ne peut pas être ultérieure à la date actuelle.'); end if;
    end;
/

-- Déclencheur pour vérifier que la date d'émission de la facture
create or replace trigger checkDateFactPaie before insert or update on Facture
    for each row
    begin
       if :NEW.DateFacture > :NEW.DatePaiement then 
       -- Si la date de facturation est supérieure à la date de paiement
          raise_application_error(-20002, 'La date de paiement ne peut être antérieure à la date de facturation.'); end if;
    end;
/

-- Déclencheur pour vérifier que la référence du devis est prise en charge
create or replace trigger checkDateFactPaie before insert or update on Facture
    for each row
    begin
       if :NEW.REFERENCEDEVIS NOT IN ('Eau', 'Energie', 'Gaz', 'Travaux', 'Entretien', 'Rénovation', 'Travaux imputables', 'Ordures ménagères') then 
       -- Si la date de facturation est supérieure à la date de paiement
          raise_application_error(-20003, 'La référence de devis nest pas prise en charge, veuillez renseigné le champs avec lun des exemples suivants : Eau/Energie/Gaz/Travaux/Entretien/Rénovation/Travaux imputables/Ordures ménagères.'); end if;
    end;
/


---------------------- TAXE ----------------------

-- Déclencheur pour vérifier les années d'impôt
create or replace trigger checkAnneeImpot before insert on Taxe
for each row
    begin    
        if :NEW.DateTaxe > SYSDATE then 
        -- Si la date est supérieure à l'année précédante, annuler l'insertion
            raise_application_error(-20001, 'L''année de l''impôt ne peut pas être supérieur à la dernière année.'); end if;
    end;
/